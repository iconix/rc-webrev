---
import { getCollection } from 'astro:content';
import type { Page } from 'astro';
import type { CollectionEntry } from 'astro:content';

import Header from '../../components/base/Header.astro';
import Pagination from '../../components/stream/Pagination.astro';
import Update from '../../components/stream/Update.astro';
import StreamLayout from '../../layouts/StreamLayout.astro';
import Now from '../../components/stream/Now.astro';

export async function getStaticPaths({ paginate }: { paginate: (items: CollectionEntry<'stream'>[], options: { pageSize: number }) => Page<CollectionEntry<'stream'>>[] }) {
    const stream = await getCollection('stream', ({ data }) => {
        return import.meta.env.PROD ? !data.draft : true;
    });
    const sortedStream = stream.sort((a, b) =>
        b.data.pubDate.getTime() - a.data.pubDate.getTime()
    );

    return paginate(sortedStream, { pageSize: 10 });
}

const pageTitle = 'the stream';
const currentSection = 'stream';

const { page } = Astro.props as { page: Page<CollectionEntry<'stream'>> };
---

<StreamLayout pageTitle={pageTitle}>
    <Header currentSection={currentSection} />
    <h1>the stream</h1>
    <main>
        <Now />
        {page.data.map(update => (
            <Update entry={update} />
        ))}
        <Pagination currentPage={page.currentPage} totalPages={page.lastPage} />
    </main>
</StreamLayout>
