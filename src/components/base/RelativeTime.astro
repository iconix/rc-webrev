---
const { date } = Astro.props;
---

<div class='relativestamp' data-timestamp={date.getTime()}>
  {/* Initial placeholder */}
  {new Date(date).toLocaleString()}
</div>

<script>
    function formatRelativeTime(timestamp: number): string {
        const now = Date.now();
        const msAgo = timestamp - now;
        const daysAgo = Math.round(msAgo / (1000 * 60 * 60 * 24));
        const hoursAgo = Math.round(msAgo / (1000 * 60 * 60));
        const minutesAgo = Math.round(msAgo / (1000 * 60));

        const formatter = new Intl.RelativeTimeFormat('en', { numeric: 'auto' });

        if (Math.abs(minutesAgo) < 60) {
            return formatter.format(minutesAgo, 'minutes');
        } else if (Math.abs(hoursAgo) < 24) {
            return formatter.format(hoursAgo, 'hours');
        } else {
            return formatter.format(daysAgo, 'days');
        }
    }

    // update all timestamps once on page load
    document.querySelectorAll('.relativestamp').forEach((element) => {
        const timestamp = parseInt(element.getAttribute('data-timestamp') || '0', 10);
        if (timestamp) {
            element.textContent = formatRelativeTime(timestamp);
        }
    });
</script>
